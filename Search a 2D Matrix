https://leetcode.com/problems/search-a-2d-matrix/description/

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m=matrix.size(); //number of rows in matrix
        int n=matrix[0].size(); //number of column in the row1 of matrix

        int s=0, e=m*n-1;

        while(s<=e){
            int mid = s+(e-s)/2;
            int mid_val = matrix[mid/n][mid%n];
            //mid / n: This calculates the integer division of mid by n, which gives you the row index where the element at index mid is located.

//mid % n: This calculates the remainder of mid divided by n, which gives you the column index where the element at index mid is located.

        if(mid_val == target)
        return true;

        else if(mid_val<target)
        s=mid+1;

        else
        e=mid-1;
        }

        return false;
        
    }
};
